#!/bin/sh

set -e

. /usr/share/debconf/confmodule

### Reading of values in the keystone config file       ###
### and setting default for dbconfig-common accordingly ###
KEY_CONF=/etc/keystone/keystone.conf

if [ -e "${KEY_CONF}" ] ; then
	KEY_CONF_AUTH_TOKEN=`grep -E "^([ \t])*admin_token([ \t])*=([ \t])*" ${KEY_CONF} | awk '{print $3}'`
	if [ -n "${KEY_CONF_AUTH_TOKEN}" ] ; then
		db_set keystone/auth-token ${KEY_CONF_AUTH_TOKEN}
	fi
fi
db_input low keystone/auth-token || true
db_input low keystone/configure_db || true
db_go

db_get keystone/configure_db
if [ "$RET" = "true" ] && [ -f /usr/share/dbconfig-common/dpkg/config ] ; then
	. /usr/share/dbconfig-common/dpkg/config
	if [ -e "${KEY_CONF}" ] ; then
		KEY_CONF_DB_CON_INFO=`grep -E "^([ \t])*connection([ \t])*=([ \t])*" ${KEY_CONF} | awk '{print $3}'`
	else
		KEY_CONF_DB_CON_INFO="sqlite:///var/lib/keystone/keystone.sqlite"
	fi
	KEY_CONF_DB_TYPE=`echo ${KEY_CONF_DB_CON_INFO} | cut -d":" -f1`
	# If we have an undefined SQL type, we go back to a more sane default (eg: SQLite)
	if [ "${KEY_CONF_DB_TYPE}" != "sqlite" ] && [ "${KEY_CONF_DB_TYPE}" != "mysql" ] && [ "${KEY_CONF_DB_TYPE}" != "pgsql" ] ; then
		KEY_CONF_DB_CON_INFO="sqlite:///var/lib/keystone/keystone.sqlite"
		KEY_CONF_DB_TYPE="sqlite"
	fi
	if [ "${KEY_CONF_DB_TYPE}" = "sqlite" ] ; then
		# This is the invalid default in the etc/keystone.conf in the source package
		if [ "${KEY_CONF_DB_CON_INFO}" = "sqlite:///keystone.db" ] ; then
			KEY_CONF_DB_CON_INFO="sqlite:///var/lib/keystone/keystone.sqlite"
		fi

		KEY_CONF_DB_PATH=`echo "${KEY_CONF_DB_CON_INFO}" | awk '{print substr($0,11)}'`
		if [ -z "${KEY_CONF_DB_PATH}" ] ; then
			KEY_CONF_DB_PATH=/var/lib/keystone/keystone.sqlite
		fi
		dbc_basepath=`dirname "${KEY_CONF_DB_PATH}"`
		dbc_dbname=`basename "${KEY_CONF_DB_PATH}"`
		dbc_dbtypes="sqlite3, mysql, pgsql"
	else
		# Later, the postinst does: mysql://$dbc_dbuser:$dbc_dbpass@${dbc_dbserver:-localhost}$dbport/$dbc_dbname
		# so we are supposed to parse that if it exists
		KEY_CONF_ADDR=`echo "${KEY_CONF_DB_CON_INFO}" | awk '{print substr($0,9)}'`
		KEY_CONF_BEFORE_AT=`echo "${KEY_CONF_ADDR}" | cut -d"@" -f1`
		KEY_CONF_AFTER_AT=`echo "${KEY_CONF_ADDR}" | cut -d"@" -f2`

		KEY_CONF_USER=`echo "${KEY_CONF_BEFORE_AT}" | cut -d":" -f2`
		KEY_CONF_USER=`echo "${KEY_CONF_USER}" | cut -d"/" -f3`
		KEY_CONF_PASS=`echo "${KEY_CONF_BEFORE_AT}" | cut -d":" -f3`
		KEY_CONF_SERVER_PORT=`echo "${KEY_CONF_AFTER_AT}" | cut -d"/" -f1`
		KEY_CONF_DB_NAME=`echo "${KEY_CONF_AFTER_AT}" | cut -d"/" -f2`

		KEY_CONF_SERVER=`echo "${KEY_CONF_SERVER_PORT}" | cut -d":" -f1`
		if echo "${KEY_CONF_SERVER_PORT}" | grep -Eq ":"  ; then
			KEY_CONF_PORT=`echo "${KEY_CONF_SERVER_PORT}" | cut -d":" -f2`
		else
			KEY_CONF_PORT=""
		fi

		if [ -n "${KEY_CONF_USER}" ] && [ -n "${KEY_CONF_PASS}" ] && [ -n "${KEY_CONF_SERVER}" ] && [ -n "${KEY_CONF_DB_NAME}" ] ; then
			dbc_dbuser=${KEY_CONF_USER}
			dbc_dbpass=${KEY_CONF_PASS}
			dbc_dbserver=${KEY_CONF_SERVER}
			dbc_dbport=${KEY_CONF_PORT}
			dbc_dbname=${KEY_CONF_DB_NAME}
		fi
		if [ "${KEY_CONF_DB_TYPE}" = "mysql" ] ; then
			dbc_dbtypes="mysql, pgsql, sqlite3"
		else
			dbc_dbtypes="pgsql, mysql, sqlite3"
		fi
		db_authmethod_user="password"
	fi
	dbc_go keystone $@
fi
