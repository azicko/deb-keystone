#!/usr/bin/make -f

# Verbose mode
#export DH_VERBOSE=1

# auth_token middleware now requires access to HOME, otherwise
# test suite cause FTBFS.  See (LP: #1031022)
export HOME="$(CURDIR)/debian/tests/"

DEBVERS := $(shell dpkg-parsechangelog | sed -n -e 's/^Version: //p')
VERSION := $(shell echo '$(DEBVERS)' | sed -e 's/^[[:digit:]]*://' -e 's/[~-].*//')
DEBFLAVOR :=$(shell dpkg-parsechangelog | grep -E ^Distribution: | cut -d" " -f2)
DEBPKGNAME :=$(shell dpkg-parsechangelog | grep -E ^Source: | cut -d" " -f2)

%:
	dh $@ --with python2

ifeq (,$(findstring nocheck, $(DEB_BUILD_OPTIONS)))
override_dh_auto_test:
        # create a dummy db for testing
	rm -rf $(CURDIR)/debian/tests/testing.db
        migrate version_control sqlite:////$(CURDIR)/debian/tests/testing.db \
                $(CURDIR)/keystone/common/sql/migrate_repo
        # run migrations
	PYTHONPATH=$(CURDIR)  migrate upgrade \
                sqlite:////$(CURDIR)/debian/tests/testing.db \
                $(CURDIR)/keystone/common/sql/migrate_repo

        # tests/test_overrides.conf can be used to setup the environment
        # for unit testing.
	cp tests/test_overrides.conf tests/test_overrides.conf.orig
	cp $(CURDIR)/debian/tests/test_overrides.conf $(CURDIR)/tests/test_overrides.conf
	sed -i 's|%CUR_DIR%|$(CURDIR)|g' $(CURDIR)/tests/test_overrides.conf
	bash run_tests.sh -N
	mv $(CURDIR)/tests/test_overrides.conf.orig $(CURDIR)/tests/test_overrides.conf
	rm -rf $(CURDIR)/debian/tests/testing.db $(CURDIR)/debian/tests/keystone-signing
endif

override_dh_builddeb:
	dh_builddeb -- -Zxz -z9

override_dh_auto_build:
	dh_auto_build
ifeq (,$(findstring nodocs, $(DEB_BUILD_OPTIONS)))
	python setup.py build_sphinx
else
	mkdir -p $(CURDIR)/doc/build/html
	mkdir -p $(CURDIR)/doc/build/man
endif

override_dh_install:
	dh_install
	rm -rf debian/python-keystone/usr/lib/python*/*/doc
	rm -rf debian/python-keystone/usr/lib/python*/*/tools
	rm -rf debian/python-keystone/usr/lib/python*/*/examples
	install -D -m 0600 $(CURDIR)/debian/logging.conf $(CURDIR)/debian/keystone/etc/keystone/logging.conf
	install -D -m 0640 etc/keystone.conf.sample debian/keystone/usr/share/keystone/keystone.conf
	cp -f etc/keystone.conf.sample debian/keystone/usr/share/doc/keystone/keystone.conf.sample

# DEBIAN
override_dh_clean:
	rm -rf $(CURDIR)/build $(CURDIR)/keystone.egg-info $(CURDIR)/.cache
	rm -rf $(CURDIR)/keystone/test/keystone.sql.log $(CURDIR)/keystone/test/keystone.ldap.log
	rm -rf $(CURDIR)/doc/build
        # NOTE(adam_g) The following stuff is built in /doc/source.  Safe for now, but
        # should be fixed upstream or updated here post-essex
	rm -rf $(CURDIR)/doc/source/keystone*.rst
	rm -rf $(CURDIR)/doc/source/modules.rst
	rm -rf $(CURDIR)/doc/source/sourcecode
	rm -rf $(CURDIR)/admin.log $(CURDIR)/keystone-legacy-auth.log
	dh_clean

override_dh_installinit:
	if dpkg-vendor --derives-from ubuntu ; then \
		for i in *.upstart.in ; do \
			MYPKG=`echo $i | cut -d. -f1` ; \
			cp $MYPKG.upstart.in $MYPKG.upstart ; \
		done ; \
	fi
	dh_installinit --error-handler=true

get-orig-source:
	uscan --verbose --force-download --rename --destdir=../build-area

override_dh_gencontrol:
	if dpkg-vendor --derives-from ubuntu ; then \
		dh_gencontrol -- -T$(CURDIR)/debian/ubuntu_control_vars ; \
	else \
		dh_gencontrol -- -T$(CURDIR)/debian/debian_control_vars ; \
	fi

get-vcs-source:
	git remote add upstream git://github.com/openstack/$(DEBPKGNAME).git || true
	git fetch upstream
	git archive --prefix=$(DEBPKGNAME)-$(VERSION)/ $(VERSION) | xz >../keystone_$(VERSION).orig.tar.xz
	if ! git checkout master ; then \
		echo "No upstream branch: checking out" ; \
		git checkout -b master upstream/master ; \
	fi
	git checkout debian/experimental

display-po-stats:
	cd $(CURDIR)/debian/po ; for i in *.po ; do \
		echo -n $$i": " ; \
		msgfmt -o /dev/null --statistic $$i ; \
	done

call-for-po-trans:
	podebconf-report-po --call --withtranslators --languageteam
