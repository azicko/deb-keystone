Description: Fix remove role assignment adds role using LDAP assignment
 When using the LDAP assignment backend, attempting to remove a role assignment
 when the role hadn't been used before would actually add the role assignment
 and would not return a 404 Not Found like the SQL backend.
 .
 This change makes it so that when attempt to remove a role that wasn't
 assigned then 404 Not Found is returned.
Author: Brant Knudson <bknudson@us.ibm.com>
Origin: upstream, https://review.openstack.org/53146
Bug-Debian: http://bugs.debian.org/728233
Bug-Ubuntu: https://bugs.launchpad.net/keystone/+bug/1242855
Date: Mon, 21 Oct 2013 15:21:12 -0500

diff --git a/keystone/assignment/backends/ldap.py b/keystone/assignment/backends/ldap.py
index 851f9ec..ecf4adb 100644
--- a/keystone/assignment/backends/ldap.py
+++ b/keystone/assignment/backends/ldap.py
@@ -426,20 +426,10 @@ class RoleApi(common_ldap.BaseLdap):
         try:
             conn.modify_s(role_dn, [(ldap.MOD_DELETE,
                                      self.member_attribute, user_dn)])
-        except ldap.NO_SUCH_OBJECT:
-            if tenant_dn is None:
-                raise exception.RoleNotFound(role_id=role_id)
-            attrs = [('objectClass', [self.object_class]),
-                     (self.member_attribute, [user_dn])]
-
-            if self.use_dumb_member:
-                attrs[1][1].append(self.dumb_member)
-            try:
-                conn.add_s(role_dn, attrs)
-            except Exception as inst:
-                raise inst
-        except ldap.NO_SUCH_ATTRIBUTE:
-            raise exception.UserNotFound(user_id=user_id)
+        except (ldap.NO_SUCH_OBJECT, ldap.NO_SUCH_ATTRIBUTE):
+            raise exception.RoleNotFound(message=_(
+                'Cannot remove role that has not been granted, %s') %
+                role_id)
         finally:
             conn.unbind_s()
 
diff --git a/keystone/tests/test_backend.py b/keystone/tests/test_backend.py
index 7dd3477..e0e81ca 100644
--- a/keystone/tests/test_backend.py
+++ b/keystone/tests/test_backend.py
@@ -61,6 +61,15 @@ class IdentityTests(object):
             self.tenant_bar['id'])
         self.assertNotIn(self.user_two['id'], user_ids)
 
+    def test_remove_user_role_not_assigned(self):
+        # Expect failure if attempt to remove a role that was never assigned to
+        # the user.
+        self.assertRaises(exception.RoleNotFound,
+                          self.identity_api.remove_role_from_user_and_project,
+                          tenant_id=self.tenant_bar['id'],
+                          user_id=self.user_two['id'],
+                          role_id=self.role_other['id'])
+
     def test_authenticate_bad_user(self):
         self.assertRaises(AssertionError,
                           self.identity_api.authenticate,
-- 
1.8.1.2


