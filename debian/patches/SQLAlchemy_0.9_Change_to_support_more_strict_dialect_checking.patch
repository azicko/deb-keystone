Description: SQLAlchemy Change to support more strict dialect checking
 SQLAlchemy Change to support more strict dialect checking
 .
 Update a couple DELETE operations within the test_sql_upgrade test case to
 support the more strict dialect checking that occurs in 0.9.3 of SQLAlchemy
 for "additional arguments".
Author: Morgan Fainberg <m@metacloud.com>
Origin: upstream, https://review.openstack.org/77392
Date: Sun, 2 Mar 2014 05:31:54 +0000 (-0800)
X-Git-Url: https://review.openstack.org/gitweb?p=openstack%2Fkeystone.git;a=commitdiff_plain;h=181c3c1dcc2e6ab6cd0a6c59d3b0ef9610a6d893
Closes-Bug: #1286717
Change-Id: I82b57257a8b49d798d813c65e76757021676ba90

diff --git a/keystone/tests/test_sql_upgrade.py b/keystone/tests/test_sql_upgrade.py
index e5def4c..99f5a3b 100644
--- a/keystone/tests/test_sql_upgrade.py
+++ b/keystone/tests/test_sql_upgrade.py
@@ -879,7 +879,7 @@ class SqlUpgradeTests(SqlMigrateBase):
         # two uses with clashing name as we try to revert to a single global
         # name space.  This limitation is raised as Bug #1125046 and the delete
         # could be removed depending on how that bug is resolved.
-        cmd = this_table.delete(id=user['id'])
+        cmd = this_table.delete().where(this_table.c.id == user['id'])
         self.engine.execute(cmd)
 
         # Now, the Project table.
@@ -903,7 +903,7 @@ class SqlUpgradeTests(SqlMigrateBase):
         # TODO(henry-nash): For now, we delete one of the projects for the same
         # reason as we delete one of the users (Bug #1125046). This delete
         # could be removed depending on that bug resolution.
-        cmd = this_table.delete(id=project['id'])
+        cmd = this_table.delete().where(this_table.c.id == project['id'])
         self.engine.execute(cmd)
 
     def test_upgrade_trusts(self):
