Description: Ignore XML entities
 Jonathan Murray from NCC Group, Joshua Harlow from Yahoo! and Stuart Stent
 independently reported a vulnerability in the parsing of XML requests in
 Keystone, Nova and Cinder. By using entities in XML requests, an
 unauthenticated attacker may consume excessive resources on the Keystone, Nova
 or Cinder API servers, resulting in a denial of service and potentially a
 crash. Authenticated attackers may also leverage XML entities to read the
 content of a local file on the Keystone API server. This only affects servers
 with XML support enabled.
Author: Dolph Mathews <dolph.mathews@gmail.com>
Origin: upstream
Date: Thu, 17 Jan 2013 20:24:30 -0600
Bug-Debian: 
Bug-Ubuntu: https://bugs.launchpad.net/keystone/+bug/1100282

diff --git a/keystone/common/serializer.py b/keystone/common/serializer.py
index cd662bc..a15beea 100644
--- a/keystone/common/serializer.py
+++ b/keystone/common/serializer.py
@@ -29,6 +29,16 @@ import re
 DOCTYPE = '<?xml version="1.0" encoding="UTF-8"?>'
 XMLNS = 'http://docs.openstack.org/identity/api/v2.0'
 
+PARSER = etree.XMLParser(
+    resolve_entities=False,
+    remove_comments=True,
+    remove_pis=True)
+
+# NOTE(dolph): lxml.etree.Entity() is just a callable that currently returns an
+# lxml.etree._Entity instance, which doesn't appear to be part of the
+# public API, so we discover the type dynamically to be safe
+ENTITY_TYPE = type(etree.Entity('x'))
+
 
 def from_xml(xml):
     """Deserialize XML to a dictionary."""
@@ -51,7 +61,7 @@ def to_xml(d, xmlns=None):
 class XmlDeserializer(object):
     def __call__(self, xml_str):
         """Returns a dictionary populated by decoding the given xml string."""
-        dom = etree.fromstring(xml_str.strip())
+        dom = etree.fromstring(xml_str.strip(), PARSER)
         return self.walk_element(dom)
 
     @staticmethod
@@ -87,7 +97,8 @@ class XmlDeserializer(object):
         # current spec does not have attributes on an element with text
         values = values or text or {}
 
-        for child in [self.walk_element(x) for x in element]:
+        for child in [self.walk_element(x) for x in element
+                      if not isinstance(x, ENTITY_TYPE)]:
             values = dict(values.items() + child.items())
 
         return {XmlDeserializer._tag_name(element.tag): values}
-- 
1.8.0

